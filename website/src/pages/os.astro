---
import Main from '../layouts/main.astro';
import Desktop from '../layouts/desktop.astro';
import Taskbar from '../layouts/taskbar.astro';
import Window from '../layouts/window.astro';
import Shortcut from '../components/desktop_shortcut.astro';
import Tab from '../components/taskbar_tab.astro';
import Login from '../components/pasword_prompt.astro';

import WebBrowser from './content/webbrowser.astro';
import Logs from './content/logs.astro';

import Fish from './content/fish.astro';
import Forum from './content/forum.astro';
import Library from './content/library.astro';
import DayToday from './content/daytoday.astro';
---

<Main>
    <Desktop>
        <Shortcut name="Web Browser" id="webbrowser" img="./webbrowser.svg"/>
        <Shortcut name="System logs" id="logs" img="./logs.svg"/>

        <Window name="Web Browser" id="webbrowser">
            <WebBrowser></WebBrowser>
        </Window>

        <Window name="System logs" id="logs">
            <Logs></Logs>
        </Window>

        <Window name="Cebulka" id="forum">
            <Forum></Forum>
        </Window>

        <Window name="Atlas ryb" id="fish">
            <Fish></Fish>
        </Window>

        <Window name="Onionshare" id="library">
            <Library></Library>
        </Window>

        <Window name="0day.today" id="daytoday">
            <DayToday></DayToday>
        </Window>
    </Desktop>

    <Taskbar>
        <Tab name="Web Browser" id="webbrowser" img="./webbrowser.svg"/>
        <Tab name="System logs" id="logs" img="./logs.svg"/>

        <Tab name="Cebulka" id="forum" img="./webbrowser.svg"/>
        <Tab name="Atlas Ryb" id="fish" img="./webbrowser.svg"/>
        <Tab name="Onionshare" id="library" img="./webbrowser.svg"/>
        <Tab name="0day.today" id="daytoday" img="./webbrowser.svg"/>
    </Taskbar>
</Main>

<script>
    function hide_shortcuts() {
        const archives = document.getElementById("logs-btn");
        if(archives) {
            archives.style.opacity = "0";
            archives.style.pointerEvents = "none";
            archives.style.position = "absolute";
        }
    }

    function hide_tabs() {
        const tabs = document.querySelectorAll<HTMLElement>(".taskbar-tab");
        if(tabs) {
            tabs.forEach(element => {
                element.style.opacity = "0";
                element.style.pointerEvents = "none";
                element.style.position = "absolute";
            });
        }
    }

    function hide_windows() {
        const windows = document.querySelectorAll<HTMLElement>(".window");
        if(windows) {
            windows.forEach(element => {
                element.style.opacity = "0";
                element.style.pointerEvents = "none";
            });
        }

        // Hide all tabs
        const tabs = document.querySelectorAll<HTMLElement>(".taskbar-tab");
        if(tabs) {
            tabs.forEach(element => {
                element.style.opacity = "0";
                element.style.pointerEvents = "none";
                element.style.position = "absolute";
            });
        }
    }

    // Drag and drop window
    let pos_x: any;
    let pos_y: any;

    let current_window: HTMLElement | null = null;
    const all_windows = document.querySelectorAll(".window-bar");
    if(all_windows) {
        all_windows.forEach(element => {
            element.addEventListener("mousedown", start_drag as EventListener);
            element.addEventListener("mouseup", stop_drag as EventListener);
        });
    }
    function start_drag(e: MouseEvent) {
        current_window = (e.target as HTMLElement).parentNode as HTMLElement;
        if(current_window) {
            const rect = current_window.getBoundingClientRect();
            pos_y = e.clientY - rect.top;
            pos_x = e.clientX - rect.left;
            // z-index
            apply_z_index(+current_window.style.zIndex, current_window);
        }
        window.addEventListener("mousemove", drag, true);
    }

    function drag(e: MouseEvent) {
        if(current_window) {
            current_window.style.top = `${e.clientY - pos_y}px`;
            current_window.style.left = `${e.clientX - pos_x}px`;
        }
    }

    function stop_drag() {
        window.removeEventListener("mousemove", drag, true);
        current_window = null;
    }

    let z_index_max = 1;
    function apply_z_index(z: number, win: HTMLElement) {
        if(z <= z_index_max) {
            let x = (z_index_max + 1);
            win.style.zIndex = x.toString();
            z_index_max = x;
        }
    }

    hide_windows();
    hide_tabs();
    hide_shortcuts();
</script>
